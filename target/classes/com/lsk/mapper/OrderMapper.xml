<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.lsk.dao.OrderMapper">
  <resultMap id="BaseResultMap" type="com.lsk.entity.Order">
    <id column="oid" jdbcType="BIGINT" property="oid" />
    <result column="gid" jdbcType="INTEGER" property="gid" />
    <result column="payer" jdbcType="INTEGER" property="payer" />
    <result column="payamount" jdbcType="DECIMAL" property="payamount" />
    <result column="dealtime" jdbcType="DATE" property="dealtime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    oid, gid, payer, payamount, dealtime
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order
    where oid = #{oid,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from order
    where oid = #{oid,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.lsk.entity.Order">
    insert into order (oid, gid, payer, 
      payamount, dealtime)
    values (#{oid,jdbcType=BIGINT}, #{gid,jdbcType=INTEGER}, #{payer,jdbcType=INTEGER}, 
      #{payamount,jdbcType=DECIMAL}, #{dealtime,jdbcType=DATE})
  </insert>
  <insert id="insertSelective" parameterType="com.lsk.entity.Order">
    insert into order
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        oid,
      </if>
      <if test="gid != null">
        gid,
      </if>
      <if test="payer != null">
        payer,
      </if>
      <if test="payamount != null">
        payamount,
      </if>
      <if test="dealtime != null">
        dealtime,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="oid != null">
        #{oid,jdbcType=BIGINT},
      </if>
      <if test="gid != null">
        #{gid,jdbcType=INTEGER},
      </if>
      <if test="payer != null">
        #{payer,jdbcType=INTEGER},
      </if>
      <if test="payamount != null">
        #{payamount,jdbcType=DECIMAL},
      </if>
      <if test="dealtime != null">
        #{dealtime,jdbcType=DATE},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.lsk.entity.Order">
    update order
    <set>
      <if test="gid != null">
        gid = #{gid,jdbcType=INTEGER},
      </if>
      <if test="payer != null">
        payer = #{payer,jdbcType=INTEGER},
      </if>
      <if test="payamount != null">
        payamount = #{payamount,jdbcType=DECIMAL},
      </if>
      <if test="dealtime != null">
        dealtime = #{dealtime,jdbcType=DATE},
      </if>
    </set>
    where oid = #{oid,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.lsk.entity.Order">
    update order
    set gid = #{gid,jdbcType=INTEGER},
      payer = #{payer,jdbcType=INTEGER},
      payamount = #{payamount,jdbcType=DECIMAL},
      dealtime = #{dealtime,jdbcType=DATE}
    where oid = #{oid,jdbcType=BIGINT}
  </update>
</mapper>